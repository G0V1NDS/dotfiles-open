#!/bin/bash

# Function to initialize PostgreSQL data directory and start server
start_postgres_server() {
  local db_name="$1"
  local db_user="$2"
  local db_password="$3"
  local db_port="$4"  # Added argument for server port

  export PGDATA="$HOME/local/pgsql/data"
  if [[ ! -d "$PGDATA" ]]; then
    mkdir -p "${PGDATA}"
    initdb -E utf8 --locale=en_US.UTF-8
  fi

  echo -e "\nCreating user $db_user id doesn't exist" >&2
  createuser -s "$db_user"

  if ! pg_ctl status | grep "no server running"; then
    echo -e "\nPostgres server is already running. Stopping the server." >&2
    pg_ctl stop
  fi

  # Start PostgreSQL server on specified port
  export PGPORT="$db_port"
  echo -e "\nStarting the server\n" >&2
  pg_ctl start

  # Set PostgreSQL environment variables
  export PGUSER="$db_user"
  export PGPASSWORD="$db_password"
  export PGDATABASE="$db_name"

  # Create database
  echo -e "\nCreating DB $db_name id doesn't exist" >&2
  createdb "$db_name"

  # Test connection
  echo -e "\nRunning test query..." >&2
  if ! psql -U "$db_user" -c "SELECT COUNT(*) FROM pg_catalog.pg_roles WHERE rolname = '$db_name'" >/dev/null; then
      echo -e "\nError: Failed to connect to the database." >&2
      exit 1
  fi
  echo -e "\nConnection successful. Test query executed." >&2
}

# Function to read PostgreSQL database details from user input or environment variables
read_postgres_details() {
  local db_name=${PGDATABASE:-postgres}
  local db_user=${PGUSER:-postgres}
  local db_password=${PGPASSWORD:-postgres}
  local db_port=${PGPORT:-5432}

  echo -e "\nPostgres env variable values:" >&2
  echo -e "\nPGDATABASE: ${PGDATABASE}" >&2
  echo -e "\nPGUSER: ${PGUSER}" >&2
  echo -e "\nPGPASSWORD: ${PGPASSWORD}" >&2
  echo -e "\nPGPORT: ${PGPORT}" >&2
  echo -e "\n" >&2

  if [ -z "$PGDATABASE" ]; then
    read -rp "Enter PostgreSQL database name [$db_name]: " input_db_name
    db_name="${input_db_name:-$db_name}"
  fi

  if [ -z "$PGUSER" ]; then
    read -rp "Enter PostgreSQL username [$db_user]: " input_db_user
    db_user="${input_db_user:-$db_user}"
  fi

  if [ -z "$PGPASSWORD" ]; then
    read -rsp "Enter PostgreSQL password [$db_password]: " input_db_password
    db_password="${input_db_password:-$db_password}"
    echo >&2 # for newline after password input
  fi

  if [ -z "$PGPORT" ]; then
    read -rp "Enter PostgreSQL port [$db_port]: " input_db_port
    db_port="${input_db_port:-$db_port}"
  fi

  echo -e "\nParameters used:" >&2
  echo -e "\ndb_name: ${db_name}" >&2
  echo -e "\ndb_user: ${db_user}" >&2
  echo -e "\ndb_password: ${db_password}" >&2
  echo -e "\ndb_port: ${db_port}" >&2
  echo -e "\n" >&2

  # Return the database details
  echo "$db_name $db_user $db_password $db_port"
}

# Main script

# Read PostgreSQL database details
db_details=$(read_postgres_details)
read db_name db_user db_password db_port <<< "$db_details"

# Start PostgreSQL server
start_postgres_server "$db_name" "$db_user" "$db_password" "$db_port"
