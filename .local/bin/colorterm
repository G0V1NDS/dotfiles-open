#!/bin/bash
#
# Based almost entirely on Bryan Gilbert's solution:
# http://bryangilbert.com/post/etc/term/dynamic-ssh-terminal-background-colors/
#
# Sets terminal screen to color based on keywords or hex code (no #, for some reason that breaks)
#
# For SSH magic, add following to ~/.zshrc:
# To check more about escape sequences: https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h3-Operating-System-Commands
# To get current xterm colors use: https://gist.github.com/blueyed/c8470c2aad3381c33ea3
: <<'END_COMMENT'
color-ssh() {
	trap "colorterm.sh" INT EXIT
    if [[ "$*" =~ "prod" ]]; then
        colorterm.sh prod
    elif [[ "$*" =~ "dev" ]]; then
        colorterm.sh dev
    else
        colorterm.sh other
    fi
    echo "$*"
    ssh "$*"
}
compdef _ssh color-ssh=ssh
alias ssh=color-ssh
END_COMMENT

is_dark=1
# Checking current color scheme
if [[ -f "~/.cache/dark-mode.off" ]]; then
    is_dark=0
fi

# Check if the hax color is passed for the background
if [ ! -z `expr match "$1" '\([A-Fa-f0-9]\{6\}\|#[A-Fa-f0-9]\{3\}\)'` ]; then
    BG_COLOR=$1
elif [[ "$1" =~ prod ]]; then
    BG_COLOR=$([[ $is_dark == 1 ]] && echo "#331C1F" || echo "#CCE3E0")
elif [[ "$1" =~ staging|dev ]]; then
    BG_COLOR=$([[ $is_dark == 1 ]] && echo "#253320" || echo "#DACCDF")
elif [[ "$1" =~ other ]]; then
    BG_COLOR=$([[ $is_dark == 1 ]] && echo "#282C34" || echo "#D7D3CB")
else
    BG_COLOR=$([[ $is_dark == 1 ]] && echo "#1D2021" || echo "#F2E5BC")
fi;

if [[ "$TERM" = "screen"* ]] && [[ -n "$TMUX" ]]; then
    tmux select-pane -P "bg=$BG_COLOR"

else
    printf "\033]11;$BG_COLOR\007"
fi

exit 0
