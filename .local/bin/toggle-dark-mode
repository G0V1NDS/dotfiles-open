#!/bin/sh
# Script to enable, disable dark mode
# Changes background for following applications
# xresources, alacritty, tmux, vim, bat


help() {
    echo "Dark Mode"
    echo "   toggle:    toggle-dark"
    echo "   dark:      toggle-dark on"
    echo "   light:     toggle-dark off"
    exit
}

dark_mode_flag="/tmp/dark-mode.off"

change_xresources_theme() {
    echo -e "Requested xresource theme is: $1"
    theme=$1
    config_file="$HOME/.config/x11/xresources"
    get_actual_path_if_symlink $config_file

    theme_file="$HOME/.config/x11/$theme.xres"
    sed -i -e "s|^#include .*gruvbox.*.xres\"|#include \"$theme_file\"|g" $config_file

    # Reloading xresource databases
    xrdb $HOME/.config/x11/xresources

    # echo -e "Merging $theme_file"
    # xrdb -merge "$theme_file"

    # Reloading xrdb colors for dwm
    dwmc xrdb
    # Reloading all active instances of `st`
    pidof st | xargs kill -SIGUSR1
}


change_alacritty_theme() {
    echo -e "Requested alacritty theme is: $1"
    config_file="$HOME/.config/alacritty/color.yml"
    theme=$1
    get_actual_path_if_symlink $config_file

    sed -i -e "s|^colors: \*.*|colors: *$theme|g" $config_file
}

change_tmux_theme() {
    echo -e "Requested tmux theme is: $1"
    theme=$1
    tmux source-file $HOME/.config/tmux/tmux.$theme.conf
}

change_vim_background() {
    # echo -e "Requested vim background mode is: $1"
    # # well, seems like there is no proper way to send a command to
    # # Vim as a client. Luckily we're using tmux, which means we can
    # # iterate over all vim pans and change the background ourself.

    # for i in $(tmux list-panes -a -F '#{session_name}:#{window_index}.#{pane_index},#{pane_tty}') ; do
    #     # Above expression returns two values comma separated, Ex main:1.1,/dev/pts/3
    #     IFS=',' read pix tty_x <<< "${i}"
    #     processes=$(ps -o state= -o comm= -t ${tty_x})
    #     if [[ $(echo $processes  | grep -iE "^.* (nvim|gvim|vi|vim).*$") ]]; then
    #         tmux send-keys -t "$pix" escape ENTER
    #         tmux send-keys -t "$pix" ":call ToggleBackground(\"${1}\")" ENTER
    #     fi
    # done

    # By using nvim-ctrl, command can be sent to all active neovim instances
    # Check https://github.com/chmln/nvim-ctrl, or you can use neovim-control https://github.com/mhinz/neovim-remote
    nvim-ctrl "call ToggleBackground(\"${1}\")"
}

change_bat_theme() {
    echo -e "Requested bat theme is: $1"
    config_file="$HOME/.config/bat/config"
    theme=$1
    get_actual_path_if_symlink $config_file

    sed -i -e "s|^--theme=.*|--theme=\"$theme\"|g" $config_file
}

change_taskwarrior_theme() {
    echo -e "Requested taskwarrior theme is: $1"
    config_file="$HOME/.config/taskwarrior/task/taskrc"
    theme=$1
    get_actual_path_if_symlink $config_file

    # theme_name="include /usr/share/doc/task/rc/solarized-${theme}-256.theme"
    theme_name="include /usr/share/doc/task/rc/${theme}-256.theme"

    sed -i -e "s|^include .*theme$|$theme_name|g" $config_file
    pkill taskwarrior-tui
}

change_gtk_theme() {
    echo -e "Requested gtk theme is: $1"
    theme=$1

    theme1="Pop-gruvbox"
    theme2="Arc-Gruvbox"

    if [[ $theme == "light" ]]; then
        temp=$theme1
        theme1=$theme2
        theme2=$temp
    fi

    config_file="$HOME/.config/gtk-2.0/gtkrc-2.0"
    get_actual_path_if_symlink $config_file
    sed -i "s/$theme1/$theme2/g" $config_file

    config_file="$HOME/.config/gtk-3.0/settings.ini"
    get_actual_path_if_symlink $config_file
    sed -i "s/$theme1/$theme2/g" $config_file

    config_file="$HOME/.config/xsettingsd/xsettingsd.conf"
    get_actual_path_if_symlink $config_file
    sed -i "s/$theme1/$theme2/g" $config_file

    pkill -1 xsettingsd
}

get_actual_path_if_symlink(){
    if [[ ! -f $config_file ]]; then
        echo -e "File ${config_file} doesn't exist"
        return
    fi
    # sed doesn't like symlinks, get the absolute path
    config_file=$(readlink -f $config_file)
    echo $config_file
}

toggledark() {
    if [[ -f $dark_mode_flag ]]; then
        startdark
    else
        stopdark
    fi
}

# TODO: Change fzf theme
stopdark() {
    change_xresources_theme gruvbox-light
    change_alacritty_theme gruvbox_light
    change_vim_background light
    change_bat_theme gruvbox-light
    change_tmux_theme light
    change_taskwarrior_theme light
    change_gtk_theme light
    touch $dark_mode_flag
}

startdark() {
    change_xresources_theme gruvbox-dark
    change_alacritty_theme gruvbox_dark
    change_vim_background dark
    change_bat_theme gruvbox-dark
    change_tmux_theme dark
    change_taskwarrior_theme dark
    change_gtk_theme dark
    rm -f $dark_mode_flag
}

case "$1" in
    "")    toggledark; exit ;;
    "on")  startdark; exit ;;
    "off") stopdark; exit ;;
    *)     help ;;
esac
