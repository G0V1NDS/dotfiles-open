#!/usr/bin/env bash

source "$HOME/.local/bin/tmux/tmux-common-functions"

# Function to check and interrupt the active process in the tmux pane
check_and_interrupt_pane() {
    local pane_index="$1"
    # Send Ctrl+C to interrupt the process
    tmux send-keys -t "$pane_index" "C-c";
    sleep 0.2
}

# Function to sanitize the command and remove the trailing semicolon if present
sanitize_command() {
    local cmd="$1"
    # Trim trailing semicolon if present
    cmd="${cmd%;}"
    echo "$cmd"
}

# tmux session name
session_name="${1}"
# tmux window name
window_name="${2}"
shift
shift
# Commands to be run on tmux shell
cmd_list=("$@")

session_name_icon_map=$(get_default_session_name_icon_map)
session_icon=$(get_session_icon "$session_name_icon_map" "$session_name")

echo -e "Tmux session name: ${session_name}"
echo -e "Tmux session icon: ${session_icon}"
echo -e "Tmux window name: ${window_name}"
echo -e "Commands to run: ${cmd_list}"

# Check if session exists
if ! tmux has-session -t "${session_icon}" 2>/dev/null; then
    # Create session if it doesn't exist
    tmux new-session -d -s "${session_icon}"
fi

# Check if window exists in the session
if ! tmux list-windows -t "${session_icon}" | grep -q "${window_name}" 2>/dev/null; then
    # Create window if it doesn't exist
    tmux new-window -n  "${window_name}" -t "${session_icon}";
    sleep 1
fi

# -F Formats list-pages command output to specific format
# -f Filter the output to specific format
tmux_panes=$(tmux list-panes -a -F "#{session_name}:#{window_name}.#{pane_index},#{pane_tty}" -f "#{m:${session_icon}:${window_name},#{session_name}:#{window_name}}")

echo -e "Sending commands to following tmux panes: \n${tmux_panes}"

IFS=',' read pane_index pane_tty <<< "${tmux_panes}"

# Check and interrupt the active process in the pane
check_and_interrupt_pane "$pane_index" "$pane_tty"

for cmd in "${cmd_list[@]}"; do
    tmux send-keys -t "${pane_index}" "$(sanitize_command "$cmd")" ENTER;
    sleep 0.2
done
